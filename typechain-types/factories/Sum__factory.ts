/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Sum, SumInterface } from "../Sum";

const _abi = [
  {
    inputs: [],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "firstNoSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "secondNoSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101f7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634f2be91f1461004657806371050a8214610064578063f91b539a14610080575b600080fd5b61004e61009c565b60405161005b91906100e5565b60405180910390f35b61007e60048036038101906100799190610131565b6100b8565b005b61009a60048036038101906100959190610131565b6100c2565b005b6000806001546000546100af919061018d565b90508091505090565b8060008190555050565b8060018190555050565b6000819050919050565b6100df816100cc565b82525050565b60006020820190506100fa60008301846100d6565b92915050565b600080fd5b61010e816100cc565b811461011957600080fd5b50565b60008135905061012b81610105565b92915050565b60006020828403121561014757610146610100565b5b60006101558482850161011c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610198826100cc565b91506101a3836100cc565b92508282019050808211156101bb576101ba61015e565b5b9291505056fea264697066735822122005c9204a48e336255bfe034c24ec0569e13c116a68953999e1ee14814de6a1a664736f6c63430008130033";

type SumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sum__factory extends ContractFactory {
  constructor(...args: SumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Sum & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Sum__factory {
    return super.connect(runner) as Sum__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SumInterface {
    return new Interface(_abi) as SumInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Sum {
    return new Contract(address, _abi, runner) as unknown as Sum;
  }
}
